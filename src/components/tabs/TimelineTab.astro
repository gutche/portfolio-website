---
import { timeline } from "../../data/timeline";

interface Props {
    class?: string;
}

const { class: className } = Astro.props;
---

<div class={`tab-panel ${className}`} data-tab="timeline">
    <div class="flex flex-col gap-2">
        {timeline.map((entry) => (
            <button
                class="timeline-item p-3 text-left hover:bg-neutral-800/50 transition-colors duration-200"
                data-period={entry.period}
                data-role={entry.role}
                data-company={entry.company}
            >
                <div class="text-sm text-neutral-400">{entry.period}</div>
                <div class="font-medium">{entry.role}</div>
                <div class="text-sm text-neutral-400">{entry.company}</div>
            </button>
        ))}
    </div>
</div>

<script>
    // Get all timeline items
    const timelineItems = document.querySelectorAll('.timeline-item');

    // Add selected class to first timeline item by default
    const firstTimelineItem = document.querySelector('.timeline-item');
    if (firstTimelineItem) {
        firstTimelineItem.classList.add('selected');
    }

    // Function to play switch sound
    const playSwitchSound = () => {
        const switchSound = document.getElementById("switch-sound") as HTMLAudioElement;
        const audioIndicator = document.getElementById('audioIndicator');
        if (switchSound && audioIndicator?.classList.contains('shadow-[0_0_10.4px_#00FF0A,0_0_3.2px_#00FF0A,0_0_3.2px_#00FF0A]')) {
            switchSound.currentTime = 0;
            switchSound.play().catch((e) => console.log("Error playing sound:", e));
        }
    };

    timelineItems.forEach(item => {
        item.addEventListener('click', () => {
            // Remove selected class from all timeline items
            timelineItems.forEach(timeline => {
                timeline.classList.remove('selected');
            });
            
            // Add selected class to clicked timeline item
            item.classList.add('selected');
            
            const period = item.getAttribute('data-period');
            const role = item.getAttribute('data-role');
            const company = item.getAttribute('data-company');
            
            // Update desktop CRT
            const crtContainer = document.querySelector('.crt-container');
            if (crtContainer && (crtContainer as any).crtEffect) {
                (crtContainer as any).crtEffect.updateImage("/timeline.png");
                (crtContainer as any).crtEffect.updateText(`${role} at ${company}`, period);
            }
            
            // Update mobile CRT
            const mobileCrtContainer = document.querySelector('.crt-container-mobile');
            if (mobileCrtContainer && (mobileCrtContainer as any).crtEffect) {
                (mobileCrtContainer as any).crtEffect.updateImage("/timeline.png");
                (mobileCrtContainer as any).crtEffect.updateText(`${role} at ${company}`, period);
            }
            
            // Play switch sound
            playSwitchSound();
        });
    });
</script>

<style>
    .timeline-item {
        background: rgba(0, 0, 0, 0.2);
        border-radius: 4px;
        cursor: pointer;
        transition: all 0.2s ease;
    }
    
    .timeline-item:hover {
        background: rgba(0, 0, 0, 0.3);
    }

    .timeline-item.selected {
        background: rgba(255, 255, 255, 0.1);
        border-color: rgba(255, 255, 255, 0.3);
        box-shadow: 0 0 10px rgba(255, 255, 255, 0.1);
    }
</style> 